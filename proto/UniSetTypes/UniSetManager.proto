syntax = "proto3";

package uniset3;

option optimize_for = LITE_RUNTIME;
// ---------------------------------------------------------------------------
import "UniSetTypes.proto";
import "MessageTypes.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
// ---------------------------------------------------------------------------
/*! 
  * \interface UniSetManager_i
  * \brief Интерфейс менеджера объектов
  * \author Pavel Vainerman
  *
  * Базовый класс для менеджеров объектов
  */
service UniSetManager_i {
    /*!< распространить сообщение всем подчиненным объектам */
    rpc broadcast(uniset3.umessage.TransportMessage) returns(google.protobuf.Empty) {}

    /*! получение информации о состоянии подчиненных объектов(менеджеров)
     * \param userparam - Необязательный пользовательский параметр (см. UniSetObject_i::getInfo()).
     * \param MaxLength  - ограничение размера возвращаемой последовательности структур SimpleInfo.
     * \note Если у менеджера количество подчиненных объектов
     * больше MaxLength, то он вернет информацию только
     * о первых MaxLength объектах. Если <=, то количество
     * равное количеству объектов.
     * \note Возвращаемые данные содержат в себе инфо. о всех
     * подчиненных объектах данного менеджера, а также объектах
     * подчиненных данному менеджеру менеджерах и их объектах
     * и т.п. и т.п. рекурсивно... Так что MaxLength должно быть
     * достаточным.
     * \todo Подумать насчет применения итератора, при слишком
     * большом( >1000 ) количестве подчиненных объектов...
     */
     rpc getObjectsInfo(ObjectsInfoParams) returns(uniset3.SimpleInfoSeq) {}
}
// ---------------------------------------------------------------------------
message ObjectsInfoParams {
    int64 id = 1;
    int32 maxLength = 2;
    string userparams = 3;
}
// ---------------------------------------------------------------------------
